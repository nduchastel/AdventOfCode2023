 cat input.txt  | tr -d "[:alpha:]" | awk '{print substr($0,1,1) substr($0,length)}' | awk '{t+=$0} END {print t}'

# explanation
#
#   the pipe (|) is used in command line to pass output from one command to the next one.
#     so   cmd_1 | cmd_2 | cmd_3
#     will execute cmd_1 and the text output (sent out to stdout) will go as input to
#     cmd_2 (aka stdin); and so on.
#
#   cat input.txt      -> just "dumps" entire text file of input.txt, line by line
#   tr -d "[:alpha:]"  -> delete all [:alpha:] ; aka letters, processed line by line
#   awk ...            -> process line by line
#       substr(x,y,z)  -> print a sub-set of an  argument - $1 for first arg, $2 for 2nd arg 
#                                                           or $0 for "entire line"
#                             x = argument ($0 means "entire line")
#                             y = start - 1-based, so 1 is for frist character
#                             z = number of characters to print
#    substr($0,1,1)    -> print very first character of line
#    substr($0,length) -> print very last character of line - starting at length
#                                (no need to put z = number of charcter since we start at end
